name: "Publish pipeline"

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  homebrew-publish:
    name: Publish package to Homebrew
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
        with:
          repository: sumoduduk/homebrew-tap
          path: homebrew-tap
          token: ${{ secrets.REPO_TOKEN }}

      - name: Download artifact from build workflow
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: nix-build.yml 
          name: homebrew-pack-termusix
          workflow_conclusion: success

      - name: copy the ruby file
        run: cp -f termusix.rb homebrew-tap/Formula

      - name: list all directory
        run : ls -R

      - name: see status and push it
        run: |
          cd homebrew-tap
          git status
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update termusix Homebrew Tap"
          git push


  # aur-publish:
  #   name: Publish to AUR
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - uses: cachix/install-nix-action@v26
  #       with:
  #         nix_path: nixpkgs=channel:nixos-unstable
  #     - uses: cachix/cachix-action@v14
  #       with:
  #         name: sumoduduk
  #         authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
  #
  #     - name: Generate PKGBUILD
  #       run: |
  #         nix build .#termusix-pkgbuild
  #         cat result/PKGBUILD
  #         cp result/PKGBUILD .
  #
  #     - name: Publish AUR package
  #       uses: KSXGitHub/github-actions-deploy-aur@v2
  #       if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'release' }}
  #       with:
  #         pkgname: termusix-bin
  #         pkgbuild: ./PKGBUILD
  #         commit_username: sumoduduk
  #         commit_email: sumoduduk13@gmail.com
  #         ssh_private_key: ${{ secrets.AUR_AUTH_KEY }}
  #         commit_message: Update AUR package
  #         ssh_keyscan_types: rsa,dsa,ecdsa,ed25519
